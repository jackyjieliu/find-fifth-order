{"version":3,"sources":["logo.jpg","component/InputField.tsx","component/Button.tsx","component/RadioSelection.tsx","service/google-sheet.service.ts","component/Spinner.tsx","page/OrderErrorPage.tsx","page/OrderSuccessPage.tsx","page/CheeseCakeOrderPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","InputField","onChange","e","_this","props","isPositiveNumeric","Number","target","value","react_default","a","createElement","TextField_default","style","this","label","type","className","margin","variant","Component","PrimaryButton","Button_default","color","onClick","RadioSelection","handleChange","event","controls","options","map","option","FormControlLabel_default","key","control","Radio_default","marginTop","FormLabel_default","RadioGroup_default","row","propertiesMap","name","phone","deliveryMethod","address","submitForm","params","Promise","resolve","reject","data","Object","keys","paramKey","join","request","url","headers","Accept","Content-Type","body","err","Spinner","position","top","left","right","bottom","zIndex","backgroundColor","marginLeft","CircularProgress_default","size","OrderErrorPage","OrderSuccessPage","items","price","DELIVERY_METHOD","PICKUP","DELIVERY","DELIVERY_METHOD_LABEL","_DELIVERY_METHOD_LABE","defineProperty","deliveryMethodOptions","CheeseCakeOrderPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","order","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setState","pending","state","fields","t0","orderError","orderSubmitted","abrupt","stop","setFieldValue","fieldName","objectSpread","field","component_InputField","width","maxWidth","item","display","lineHeight","fontSize","paddingRight","_this2","totalPrice","forEach","amount","_this3","page_OrderErrorPage","page_OrderSuccessPage","component_Spinner","renderItemField","calculateTotalCost","renderTextInput","component_RadioSelection","component_Button","theme","createMuiTheme","palette","primary","main","secondary","App","styles","height","overflow","backgroundImage","concat","logo","backgroundRepeat","backgroundPosition","backgroundSize","marginRight","boxShadow","padding","borderTopLeftRadius","borderTopRightRadius","page_CheeseCakeOrderPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21979331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c49919c2.jpg\";","import TextField from '@material-ui/core/TextField';\nimport React, { Component } from 'react';\n\ninterface Props {\n  type?: string;\n  label?: string;\n  className?: string;\n  style?: any;\n  isPositiveNumeric?: boolean;\n  value: string;\n  onChange: (value: string) => void;\n}\n\nclass InputField extends Component<Props> {\n  onChange = (e: any) => {\n    if (this.props.isPositiveNumeric) {\n      if (!(Number(e.target.value) >= 0)) {\n        return;\n      }\n    }\n    this.props.onChange(e.target.value);\n  }\n  render() {\n    return <TextField\n      style={this.props.style}\n      label={this.props.label}\n      type={this.props.type || 'text'}\n      className={this.props.className}\n      value={this.props.value}\n      onChange={this.onChange}\n      margin=\"normal\"\n      variant=\"outlined\"\n    />\n  }\n}\n\nexport default InputField;\n","import Button from '@material-ui/core/Button';\nimport React, { Component } from 'react';\n\ninterface Props {\n  label: string;\n  className?: string;\n  color?: 'inherit' | 'primary' | 'secondary' | 'default';\n  onClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void\n}\n\nclass PrimaryButton extends Component<Props> {\n  render() {\n    return <Button\n      style={{ margin: 5 }}\n      color={this.props.color || 'primary'}\n      variant=\"contained\"\n      className={this.props.className}\n      onClick={this.props.onClick}\n    >\n      {this.props.label}\n    </Button>\n  }\n}\n\nexport default PrimaryButton;","import React, { Component } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\ninterface Props {\n  onChange: (value: string) => any;\n  label: string;\n  value: string;\n  options: Array<{ value: string; label: string; }>\n}\nclass RadioSelection extends Component<Props> {\n  handleChange = (event: any) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n\n    const controls = this.props.options.map((option) => {\n      return (\n        <FormControlLabel value={option.value} key={option.value} control={<Radio color=\"primary\"/>} label={option.label} />\n      );\n    })\n\n    return (\n      <div style={{ marginTop: 16 }}>\n        <FormLabel>{this.props.label}</FormLabel>\n        <RadioGroup\n          row\n          value={this.props.value}\n          onChange={this.handleChange}\n          >\n          { controls }\n        </RadioGroup>\n      </div>\n    )\n  }\n}\n\nexport default RadioSelection;","\nimport * as request from 'request';\n\ninterface SubmitParams {\n  name: string;\n  phone: string;\n  deliveryMethod: string;\n  address: string;\n}\n\nconst propertiesMap: any = {\n  name: 'entry.1861950353',\n  phone: 'entry.1675314835',\n  deliveryMethod: 'entry.340711773',\n  address: 'entry.1324653453'\n};\n\nexport function submitForm(params: SubmitParams) {\n\n  return new Promise((resolve, reject) => {\n\n    const data = Object.keys(params).map((paramKey) => {\n      return propertiesMap[paramKey] + '=' + (params as any)[paramKey];\n    }).join('&');\n\n\n    // var data =[\n    //   'entry.1597674574=' + feedback,\n    //   'entry.1342041182=' + email\n    // ].join('&');\n\n    var url = 'https://docs.google.com/forms/d/1dsJ83aqswynNCsNSa7wq2qaCznDeOm33HGWaFSmYUj4';\n    request.post({\n      url: url + '/formResponse',\n      headers: {\n        'Accept': 'application/xml, text/xml, */*; q=0.01',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n      body: data\n    }, (err: any) => {\n      if (!err) {\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  })\n}","import React, { Component } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Spinner extends Component {\n  render() {\n    const style: any = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 10000,\n      backgroundColor: 'rgba(0, 0, 0, 0.2)'\n    };\n\n    const center: any = {\n      position: 'relative',\n      left: '50%',\n      top: '48%',\n      marginLeft: -35,\n    };\n\n    return  (\n      <div style={style}>\n        <div style={center}>\n          <CircularProgress size={70} color=\"secondary\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n","\nimport React, { Component } from 'react';\n\nclass OrderErrorPage extends Component <{}, {}> {\n  render() {\n    return (\n      <div>\n        <h2>\n          Error\n        </h2>\n      </div>\n    );\n  }\n}\n\n\nexport default OrderErrorPage;\n","\nimport React, { Component } from 'react';\n\nclass OrderSuccessPage extends Component <{}, {}> {\n  render() {\n    return (\n      <div>\n        <h2>\n          Success\n        </h2>\n      </div>\n    );\n  }\n}\n\n\nexport default OrderSuccessPage;\n","\nimport React, { Component } from 'react';\nimport InputField from '../component/InputField';\nimport PrimaryButton from '../component/Button';\nimport RadioSelection from '../component/RadioSelection';\nimport { submitForm } from '../service/google-sheet.service';\nimport Spinner from '../component/Spinner';\nimport OrderErrorPage from './OrderErrorPage';\nimport OrderSuccessPage from './OrderSuccessPage';\n\ninterface State {\n  fields: { [key: string]: any};\n  pending: boolean;\n  orderSubmitted: boolean;\n  orderError: boolean;\n}\n\n\nconst items = [\n  {\n    label: 'Pie 1',\n    key: 'pie1',\n    price: 100\n  },\n  {\n    label: 'Pie 2',\n    key: 'pie2',\n    price: 200\n  },\n  {\n    label: 'Pie 3',\n    key: 'pie3',\n    price: 300\n  },\n];\n\nconst DELIVERY_METHOD = {\n  PICKUP: 'pickup',\n  DELIVERY: 'delivery'\n}\n\nconst DELIVERY_METHOD_LABEL = {\n  [DELIVERY_METHOD.PICKUP]: '自取',\n  [DELIVERY_METHOD.DELIVERY]: '冷凍宅配 貨到付款',\n}\n\nconst deliveryMethodOptions = [\n  {\n    value: DELIVERY_METHOD.PICKUP,\n    label: DELIVERY_METHOD_LABEL[DELIVERY_METHOD.PICKUP],\n  },\n  {\n    value: DELIVERY_METHOD.DELIVERY,\n    label: DELIVERY_METHOD_LABEL[DELIVERY_METHOD.DELIVERY],\n  }\n]\n\nclass CheeseCakeOrderPage extends Component <{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      fields: {\n        deliveryMethod: DELIVERY_METHOD.PICKUP\n      },\n      pending: false,\n      orderSubmitted: false,\n      orderError: false,\n    };\n  }\n\n  order = async () => {\n    this.setState({\n      pending: true\n    });\n\n    try {\n      await submitForm({\n        name: this.state.fields.name,\n        phone: this.state.fields.phone,\n        deliveryMethod: DELIVERY_METHOD_LABEL[this.state.fields.deliveryMethod],\n        address: this.state.fields.address,\n      });\n    } catch (e) {\n      // TODO: handle error\n      this.setState({\n        pending: false,\n        orderError: true,\n        orderSubmitted: false,\n      });\n      return;\n    }\n\n    this.setState({\n      pending: false,\n      orderError: false,\n      orderSubmitted: true,\n    });\n    return;\n  }\n\n  setFieldValue = (fieldName: string) => {\n    return (value: string) => {\n      this.setState({\n        fields: {\n          ...this.state.fields,\n          [fieldName]: value\n        }\n      });\n    }\n  }\n\n  renderTextInput(field: string, label: string) {\n    return (\n      <div>\n        <InputField\n          key={field}\n          style={{ width: '100%', maxWidth: 300 }}\n          value={this.state.fields[field]}\n          onChange={this.setFieldValue(field)}\n          label={label}\n        />\n      </div>\n    );\n  }\n\n  renderItemField(item: { label: string, key: string, price: number }) {\n    return (\n      <div key={item.key}>\n        <div style={{ display: 'inline-block', lineHeight: '80px', fontSize: '20px', paddingRight: '30px' }}>\n          {item.label} ${item.price}\n        </div>\n        <InputField\n          style={{ width: 100 }}\n          isPositiveNumeric={true}\n          type=\"number\"\n          value={this.state.fields[item.key]}\n          onChange={this.setFieldValue(item.key)}\n          label=\"數量\"\n        />\n      </div>\n    );\n  }\n\n  calculateTotalCost() {\n    let totalPrice = 0;\n    items.forEach((item) => {\n      const amount = Number(this.state.fields[item.key]);\n      if (!!amount) {\n        totalPrice = totalPrice + (item.price * amount);\n      }\n    });\n    return totalPrice;\n  }\n\n  render() {\n    if (this.state.orderError) {\n      return <OrderErrorPage />;\n    } else if (this.state.orderSubmitted) {\n      return <OrderSuccessPage />;\n    }\n\n    return (\n      <div>\n        {\n          (this.state.pending) ? <Spinner/> : ''\n        }\n        <h2>\n          線上訂購派\n        </h2>\n\n\n        {\n          items.map((item) => {\n            return this.renderItemField(item);\n          })\n        }\n\n        <div style={{ lineHeight: '80px', fontSize: '20px' }}>\n          總價: ${this.calculateTotalCost()}\n        </div>\n\n\n        {this.renderTextInput('name', '姓名')}\n        {this.renderTextInput('phone', '手機')}\n\n        <RadioSelection\n          label=\"交貨方式\"\n          options={deliveryMethodOptions}\n          onChange={this.setFieldValue('deliveryMethod')}\n          value={this.state.fields.deliveryMethod}\n        />\n        {\n          (this.state.fields.deliveryMethod === DELIVERY_METHOD.DELIVERY) ?\n            this.renderTextInput('address', '地址') :\n            ''\n        }\n        <div>\n          <PrimaryButton label=\"訂購\" onClick={this.order}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default CheeseCakeOrderPage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport CheeseCakeOrderPage from './page/CheeseCakeOrderPage';\nimport TopBar from './component/TopBar';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport logo from './logo.jpg';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#2E3546',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      main: '#baa577'\n    },\n  },\n});\n\nclass App extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <div style={{ height: 500, backgroundColor: '#2E3546', overflow: 'hidden' }}>\n            <div style={{\n              marginTop: -70,\n              marginLeft: -20,\n              backgroundImage: `url(${logo})`,\n              height: 500,\n              backgroundRepeat  : 'no-repeat',\n              backgroundPosition: 'center',\n              backgroundSize: '500px'\n            }}>\n            </div>\n          </div>\n          <div style={{\n            marginTop: -120,\n            marginLeft: 20,\n            marginRight: 20,\n            backgroundColor: '#fff',\n            // border: '1px solid #baa577',\n            boxShadow: '2px 2px 2px #baa577',\n            padding: 30,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10\n          }}>\n            <CheeseCakeOrderPage/>\n          </div>\n\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}